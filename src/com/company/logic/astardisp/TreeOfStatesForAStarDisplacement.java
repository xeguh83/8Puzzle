package com.company.logic.astardisp;

import com.company.logic.Coordinates;
import com.company.logic.Global;
import com.company.logic.State;

import java.util.*;

/**
 * Created by например Андрей on 08.11.2015.
 */
public class TreeOfStatesForAStarDisplacement {


    private Set<State> watchedTree;

    private List<State> list;


    public TreeOfStatesForAStarDisplacement(State rootState) {
        watchedTree = new HashSet<>();
        watchedTree.add(rootState);

        list = new ArrayList<>();
        list.add(rootState);
    }

    public Set<State> getWatchedTree() {
        return watchedTree;
    }

    public List<State> getList() {
        return list;
    }

    public void addChildrenToList(State state) {
        Coordinates zero = state.getZero();

        // ???? ????? ?? ??????? ????? ?? ???????? ??????????? ??????
        if (zero.getI() > 0) {
            State stateAfterLeftSwap = new State(state).swapLeft();
            if (watchedTree.add(stateAfterLeftSwap)) {
                list.add(stateAfterLeftSwap);
            }
        }

        // ???? ????? ?? ??????? ?????? ?? ???????? ???????????? ???????
        if (zero.getI() < (Global.MATRIX_SIZE - 1)) {
            State stateAfterRightSwap = new State(state).swapRight();
            if (watchedTree.add(stateAfterRightSwap)) {
                list.add(stateAfterRightSwap);
            }
        }

        // ???? ????? ?? ??????? ?????? ?? ???????? ??????????? ????
        if (zero.getJ() < (Global.MATRIX_SIZE - 1)) {
            State stateAfterDownSwap = new State(state).swapDown();
            if (watchedTree.add(stateAfterDownSwap)) {
                list.add(stateAfterDownSwap);
            }
        }

        // ???? ????? ?? ??????? ??????? ?? ???????? ??????????? ?????
        if (zero.getJ() > 0) {
            State stateAfterUpSwap = new State(state).swapUp();
            if (watchedTree.add(stateAfterUpSwap)) {
                list.add(stateAfterUpSwap);
            }
        }
    }

}
